{"version":3,"sources":["images/logo.svg","components/Header/Header.tsx","constants/shared.ts","components/Footer/Footer.tsx","components/TokenForm/TokenFormSubmitted/TokenFormSubmitted.tsx","components/TokenForm/TokenFormInput/TokenFormInput.tsx","components/TokenForm/TokenFormRadio/TokenFormRadio.tsx","components/TokenForm/TokenForm.tsx","App.tsx","index.tsx"],"names":["Header","className","href","src","logo","alt","titles","blockchainButtons","name","id","footerLinks","Footer","map","item","TokenFormSubmitted","company","tokenName","symbol","maxSupply","selectedBlockchain","TokenFormInput","title","type","pattern","setValue","value","handleInputChange","event","target","handleSymbolChange","toUpperCase","handleSupplyChange","supply","replace","htmlFor","placeholder","onChange","handlerOnChange","required","TokenFormRadio","setSelectedBlockchain","handleRadioChange","TokenForm","useState","setCompany","setTokenName","setSymbol","setMaxSupply","isSubmitted","setIsSubmitted","action","method","onSubmit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49435085.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.91395cfa.svg\";","import React from 'react';\nimport logo from '../../images/logo.svg';\nimport './Header.scss';\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <a href=\"/\" className=\"Header__link\">\n        <img src={logo} alt=\"Test Capital logo\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Header;\n","export const titles = {\n  title: 'Token',\n  subtitle: 'Create your own crypto token',\n};\n\nexport const blockchainButtons = [\n  { name: 'Ethereum', id: 1 },\n  { name: 'Binance Smart Chain', id: 2 },\n];\n\nexport const footerLinks = [\n  { name: 'Terms', href: '/', id: 1 },\n  { name: 'Privacy', href: '/', id: 2 },\n  { name: 'Faq', href: '/', id: 3 },\n];\n","import React from 'react';\nimport './Footer.scss';\nimport { footerLinks } from '../../constants/shared';\nimport { FooterLink } from '../../types/shared';\n\nconst Footer = () => {\n  return (\n    <div className=\"Footer\">\n      <div className=\"Footer__text\">\n        Â© 2021 All rights reserved.\n      </div>\n      <div className=\"Footer__links\">\n        {footerLinks.map((item: FooterLink) => (\n          <a\n            key={item.id}\n            href={item.href}\n            className=\"links__item\"\n          >\n            {item.name}\n          </a>\n        ))}\n      </div>\n      <div className=\"Footer__text\">\n        Contact us: ask@test.capital\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './TokenFormSubmitted.scss';\n\ntype Props = {\n  company: string,\n  tokenName: string,\n  symbol: string,\n  maxSupply: string,\n  selectedBlockchain: string,\n}\n\nconst TokenFormSubmitted: React.FC<Props> = ({\n  company,\n  tokenName,\n  symbol,\n  maxSupply,\n  selectedBlockchain,\n}) => {\n  return (\n    <div className=\"TokenFormSubmitted\">\n      <div className=\"TokenFormSubmitted__item\">\n        Company:&nbsp;\n        {company}\n      </div>\n      <div className=\"TokenFormSubmitted__item\">\n        Token name:&nbsp;\n        {tokenName}\n      </div>\n      <div className=\"TokenFormSubmitted__item\">\n        Symbol:&nbsp;\n        {symbol}\n      </div>\n      <div className=\"TokenFormSubmitted__item\">\n        Maximum token supply:&nbsp;\n        {maxSupply}\n      </div>\n      <div className=\"TokenFormSubmitted__item\">\n        Selected blockchain:&nbsp;\n        {selectedBlockchain}\n      </div>\n    </div>\n  );\n};\n\nexport default TokenFormSubmitted;\n","import React from 'react';\nimport './TokenFormInput.scss';\n\ntype Props = {\n  title: string,\n  id: string,\n  type: string,\n  pattern?: string,\n  setValue: (value: any) => void,\n  value: string | number,\n};\n\nconst TokenFormInput: React.FC<Props> = ({\n  title,\n  id,\n  type,\n  pattern,\n  setValue,\n  value,\n}) => {\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleSymbolChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const symbol = event.target.value.toUpperCase();\n    setValue(symbol);\n  };\n\n  const handleSupplyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const supply = event.target.value;\n    setValue(supply.replace(/\\W/gi, '').replace(/(.{3})/g, '$1 '));\n  };\n\n  const handlerOnChange = () => {\n    switch (title) {\n      case 'Symbol':\n        return handleSymbolChange;\n      case 'Maximum token supply':\n        return handleSupplyChange;\n      default:\n        return handleInputChange;\n    }\n  };\n\n  return (\n    <label className=\"TokenFormInput\" htmlFor={id}>\n      <span className=\"TokenFormInput__name\">\n        {title}\n      </span>\n      <input\n        type={type}\n        className=\"TokenFormInput__input\"\n        id={id}\n        value={value}\n        placeholder={title}\n        pattern={pattern}\n        onChange={handlerOnChange()}\n        required\n      />\n    </label>\n  );\n};\n\nexport default TokenFormInput;\n","import React from 'react';\nimport { blockchainButtons } from '../../../constants/shared';\nimport { BlockchainButton } from '../../../types/shared';\nimport './TokenFormRadio.scss';\n\ntype Props = {\n  setSelectedBlockchain: (value: string) => void,\n};\n\nconst TokenFormRadio: React.FC<Props> = ({ setSelectedBlockchain }) => {\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedBlockchain(event.target.value);\n  };\n\n  return (\n    <div className=\"TokenFormRadio\">\n      <div className=\"TokenFormRadio__item\">\n        <span className=\"TokenFormRadio__name\">\n          Blockchain\n        </span>\n        <div className=\"TokenFormRadio__container\">\n          {blockchainButtons.map((item: BlockchainButton) => (\n            <>\n              <input\n                type=\"radio\"\n                name=\"radioButton\"\n                key={item.id}\n                className=\"TokenFormRadio__input\"\n                value={item.name}\n                id={item.name}\n                onChange={handleRadioChange}\n                required\n              />\n              <label htmlFor={item.name} className=\"TokenFormRadio__label\">\n                {item.name}\n              </label>\n            </>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TokenFormRadio;\n","import React, { useState } from 'react';\nimport './TokenForm.scss';\nimport TokenFormSubmitted from './TokenFormSubmitted/TokenFormSubmitted';\nimport TokenFormInput from './TokenFormInput/TokenFormInput';\nimport { titles } from '../../constants/shared';\nimport TokenFormRadio from './TokenFormRadio/TokenFormRadio';\n\nconst TokenForm = () => {\n  const [selectedBlockchain, setSelectedBlockchain] = useState<string>('');\n  const [company, setCompany] = useState<string>('');\n  const [tokenName, setTokenName] = useState<string>('');\n  const [symbol, setSymbol] = useState<string>('');\n  const [maxSupply, setMaxSupply] = useState<string>('');\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCompany(event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      {isSubmitted\n        ? (\n          <TokenFormSubmitted\n            company={company}\n            tokenName={tokenName}\n            symbol={symbol}\n            maxSupply={maxSupply}\n            selectedBlockchain={selectedBlockchain}\n          />\n        )\n        : (\n          <div className=\"TokenForm\">\n            <h1 className=\"TokenForm__title\">\n              {titles.title}\n            </h1>\n            <h2 className=\"TokenForm__subtitle\">\n              {titles.subtitle}\n            </h2>\n            <form\n              action=\"#\"\n              method=\"GET\"\n              onSubmit={() => setIsSubmitted(true)}\n            >\n              <div className=\"TokenForm__form form\">\n                <label className=\"form__item\" htmlFor=\"companyId\">\n                  <span className=\"form__item__name\">\n                    Company\n                  </span>\n                  <select\n                    className=\"form__item__select\"\n                    name=\"company\"\n                    id=\"companyId\"\n                    onChange={handleSelectChange}\n                    required\n                  >\n                    <option value=\"\">Select company</option>\n                    <option value=\"My company\">My company</option>\n                    <option value=\"Our company\">Our company</option>\n                  </select>\n                </label>\n                <TokenFormInput\n                  title=\"Token name\"\n                  id=\"tokenNameId\"\n                  type=\"text\"\n                  setValue={setTokenName}\n                  value={tokenName}\n                />\n                <TokenFormInput\n                  title=\"Symbol\"\n                  id=\"symbolId\"\n                  type=\"text\"\n                  setValue={setSymbol}\n                  value={symbol}\n                />\n                <TokenFormInput\n                  title=\"Maximum token supply\"\n                  id=\"maxSupplyId\"\n                  type=\"text\"\n                  pattern=\"[0-9 ]+\"\n                  setValue={setMaxSupply}\n                  value={maxSupply}\n                />\n                <TokenFormRadio setSelectedBlockchain={setSelectedBlockchain} />\n                <div className=\"form__item form__supply\">\n                  <span className=\"form__item__name\">\n                    Supply\n                  </span>\n                  <label htmlFor=\"checkboxId\" className=\"form__item__label\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"checkboxId\"\n                      name=\"checkbox\"\n                      className=\"form__item__checkbox\"\n                      required\n                    />\n                    <div className=\"form__item__checkmark\" />\n                    <span className=\"form__item__text\">Enabled</span>\n                  </label>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"form__button\"\n                >\n                  save draft\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default TokenForm;\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport TokenForm from './components/TokenForm/TokenForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App__container\">\n        <Header />\n        <TokenForm />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}